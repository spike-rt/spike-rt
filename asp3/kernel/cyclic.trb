# -*- coding: utf-8 -*-
#
#   TOPPERS/ASP Kernel
#       Toyohashi Open Platform for Embedded Real-Time Systems/
#       Advanced Standard Profile Kernel
# 
#   Copyright (C) 2015 by FUJI SOFT INCORPORATED, JAPAN
#   Copyright (C) 2015-2019 by Embedded and Real-Time Systems Laboratory
#               Graduate School of Information Science, Nagoya Univ., JAPAN
# 
#   上記著作権者は，以下の(1)〜(4)の条件を満たす場合に限り，本ソフトウェ
#   ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
#   変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
#   (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
#       権表示，この利用条件および下記の無保証規定が，そのままの形でソー
#       スコード中に含まれていること．
#   (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
#       用できる形で再配布する場合には，再配布に伴うドキュメント（利用
#       者マニュアルなど）に，上記の著作権表示，この利用条件および下記
#       の無保証規定を掲載すること．
#   (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
#       用できない形で再配布する場合には，次のいずれかの条件を満たすこ
#       と．
#     (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
#         作権表示，この利用条件および下記の無保証規定を掲載すること．
#     (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
#         報告すること．
#   (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
#       害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
#       また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
#       由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
#       免責すること．
# 
#   本ソフトウェアは，無保証で提供されているものである．上記著作権者お
#   よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
#   に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
#   アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
#   の責任を負わない．
# 
#   $Id: cyclic.trb 1332 2019-12-01 20:29:57Z ertl-hiro $
# 

#
#		周期通知機能の生成スクリプト
#

class CyclicObject < KernelObject
  def initialize()
    super("cyc", "cyclic")
  end

  def prepare(key, params)
    # cycatrが無効の場合（E_RSATR）［NGKI2383］［NGKI2370］［ASPS0172］
    #（TA_STA以外のビットがセットされている場合）
    if (params[:cycatr] & ~($TA_STA)) != 0
      error_illegal_id("E_RSATR", params, :cycatr, :cycid)
    end

    # cyctimが有効範囲外の場合（E_PAR）［NGKI2397］
    #（0 < cyctim && cyctim <= TMAX_RELTIMでない場合）
    if !(0 < params[:cyctim] && params[:cyctim] <= $TMAX_RELTIM)
      error_illegal_id("E_PAR", params, :cyctim, :cycid)
    end

    # cycphsが有効範囲外の場合（E_PAR）［NGKI2399］
    #（0 <= cycphs && cycphs <= TMAX_RELTIMでない場合）
    if !(0 <= params[:cycphs] && params[:cycphs] <= $TMAX_RELTIM)
      error_illegal_id("E_PAR", params, :cycphs, :cycid)
    end

    # 通知情報の処理
    params[:nfyhdr] = "_kernel_cychdr_#{params[:cycid]}"
    generateNotifyHandler(key, params, :cycid)
  end

  def generateInib(key, params)
    return("(#{params[:cycatr]}), (intptr_t)(#{params[:par1]}), " \
			"#{params[:nfyhdr]}, (#{params[:cyctim]}), (#{params[:cycphs]})")
  end
end

#
#  周期通知に関する情報の生成
#
$kernelCfgC.comment_header("Cyclic Notification Functions")
CyclicObject.new.generate()
