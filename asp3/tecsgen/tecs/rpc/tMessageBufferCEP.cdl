/*
 *  TECS Generator
 *      Generator for TOPPERS Embedded Component System
 *  
 *   Copyright (C) 2008-2013 by TOPPERS Project
 *--
 *   上記著作権者は，以下の(1)(4)の条件を満たす場合に限り，本ソフトウェ
 *   ア（本ソフトウェアを改変したものを含む．以下同じ）を使用・複製・改
 *   変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
 *   (1) 本ソフトウェアをソースコードの形で利用する場合には，上記の著作
 *       権表示，この利用条件および下記の無保証規定が，そのままの形でソー
 *       スコード中に含まれていること．
 *   (2) 本ソフトウェアを，ライブラリ形式など，他のソフトウェア開発に使
 *       用できる形で再配布する場合には，再配布に伴うドキュメント（利用
 *       者マニュアルなど）に，上記の著作権表示，この利用条件および下記
 *       の無保証規定を掲載すること．
 *   (3) 本ソフトウェアを，機器に組み込むなど，他のソフトウェア開発に使
 *       用できない形で再配布する場合には，次のいずれかの条件を満たすこ
 *       と．
 *     (a) 再配布に伴うドキュメント（利用者マニュアルなど）に，上記の著
 *         作権表示，この利用条件および下記の無保証規定を掲載すること．
 *     (b) 再配布の形態を，別に定める方法によって，TOPPERSプロジェクトに
 *         報告すること．
 *   (4) 本ソフトウェアの利用により直接的または間接的に生じるいかなる損
 *       害からも，上記著作権者およびTOPPERSプロジェクトを免責すること．
 *       また，本ソフトウェアのユーザまたはエンドユーザからのいかなる理
 *       由に基づく請求からも，上記著作権者およびTOPPERSプロジェクトを
 *       免責すること．
 *  
 *   本ソフトウェアは，無保証で提供されているものである．上記著作権者お
 *   よびTOPPERSプロジェクトは，本ソフトウェアに関して，特定の使用目的
 *   に対する適合性も含めて，いかなる保証も行わない．また，本ソフトウェ
 *   アの利用により直接的または間接的に生じたいかなる損害に関しても，そ
 *   の責任を負わない．
 *  
 *   $Id: tMessageBufferCEP.cdl 2952 2018-05-07 10:19:07Z okuma-top $
 */

const uint16_t DEFAULT_MESSAGE_BUFFER_SIZE = 64;

celltype tMessageBufferCEP {
    [inline]
        entry sChannel eChannel;
    call  sMessageBuffer cMessageBuffer0;   /* Client(send) --> Server(receive) */
    call  sMessageBuffer cMessageBuffer1;   /* Server(send) --> Client(receive) */

    attr {
        uint16_t  buf_size = DEFAULT_MESSAGE_BUFFER_SIZE;
        /* この値は maxMessageSize に合わせる。小さいと、バッファオーバーランになる */
    };
    var {
        /*
         * OpaqueMarshalerPlugin の生成するマーシャラは、受信したいサイズ以上の領域を確保しない．
         * 一方、tMessageBuffer は、最大 maxMessageSize 読み出しうる．
         * 受信する側は、必ず maxMessageSize を用意しておく必要がある．
         * このため、いったんバッファへ受け取ってコピーする必要がある．
         */
        [size_is(buf_size)]
            int8_t *read_buf;
        uint16_t   read_count;
        uint16_t   n_read_buf_filled;

        [size_is(buf_size)]
            int8_t *write_buf;
        uint16_t   write_count;
    };
};
