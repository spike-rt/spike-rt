/*
 *		全静的APIのパス3でのエラー検出のテスト(1)
 *
 *  $Id: pass3_all1.cfg 1334 2019-12-02 04:20:21Z ertl-hiro $
 */

#include "cfg_common.h"

/* taskがプログラムの先頭番地として正しくない［NGKI1033］*/
CRE_TSK(TASK1, { TA_ACT, 1, ADD1(task1), MID_PRIORITY, STACK_SIZE, NULL });
CRE_TSK(TASK2, { TA_ACT, 2, 0, MID_PRIORITY, STACK_SIZE, NULL });

/* stkがターゲット定義の制約に合致しない［NGKI1056］*/
CRE_TSK(TASK3, { TA_NULL, 3, task3, HIGH_PRIORITY, STACK_SIZE,
													ADD1(stack_TASK3) });
CRE_TSK(TASK4, { TA_NULL, 4, task4, HIGH_PRIORITY, STACK_SIZE, 0 });

/* mpfがターゲット定義の制約に合致しない［NGKI2249］*/
CRE_MPF(MPF1, { TA_NULL, 10, 100, ADD1(mpf_MPF1), NULL });
CRE_MPF(MPF2, { TA_NULL, 20, 200, 0, NULL });

/* タイムイベントハンドラの先頭番地が正しくない［NGKI3693］*/
CRE_CYC(CYC1, { TA_NULL, { TNFY_HANDLER, 1, ADD1(cyclic1_handler) },
														1000, 1000 });
CRE_CYC(CYC2, { TA_NULL, { TNFY_HANDLER, 1, 0 }, 1000, 1000 });

/* 変数の番地が正しくない［NGKI3699］*/
CRE_CYC(CYC3, { TA_NULL, { TNFY_SETVAR, ADD1(&nvar1), 1 }, 1000, 1000 });
CRE_CYC(CYC4, { TA_NULL, { TNFY_SETVAR, 0, 1 }, 1000, 1000 });

/* 変数の番地が正しくない［NGKI3701］*/
CRE_CYC(CYC5, { TA_NULL, { TNFY_ACTTSK|TENFY_SETVAR, TASK1, ADD1(&nvar1) },
														1000, 1000 });
CRE_CYC(CYC6, { TA_NULL, { TNFY_ACTTSK|TENFY_SETVAR, TASK1, 0 },
														1000, 1000 });

/* 変数の番地が正しくない［NGKI3897］*/
CRE_CYC(CYC7, { TA_NULL, { TNFY_INCVAR, ADD1(&nvar2) }, 1000, 1000 });
CRE_CYC(CYC8, { TA_NULL, { TNFY_INCVAR, 0 }, 1000, 1000 });

/* 変数の番地が正しくない［NGKI3897］*/
CRE_CYC(CYC9, { TA_NULL, { TNFY_ACTTSK|TENFY_INCVAR, TASK1, ADD1(&nvar2) },
														1000, 1000 });
CRE_CYC(CYC10, { TA_NULL, { TNFY_ACTTSK|TENFY_INCVAR, TASK1, 0 },
														1000, 1000 });

/* タスクIDが有効範囲外［NGKI3704］*/
CRE_CYC(CYC11, { TA_NULL, { TNFY_ACTTSK, TSKID_LARGE }, 1000, 1000 });
CRE_CYC(CYC12, { TA_NULL, { TNFY_WUPTSK, TSKID_LARGE }, 1000, 1000 });
CRE_CYC(CYC13, { TA_NULL, { TNFY_ACTTSK|TENFY_ACTTSK, TASK1, TSKID_LARGE },
														1000, 1000 });
CRE_CYC(CYC14, { TA_NULL, { TNFY_ACTTSK|TENFY_WUPTSK, TASK1, TSKID_LARGE },
														1000, 1000 });

/* セマフォIDが有効範囲外［NGKI3707］*/
CRE_CYC(CYC15, { TA_NULL, { TNFY_SIGSEM, SEMID_LARGE }, 1000, 1000 });
CRE_CYC(CYC16, { TA_NULL, { TNFY_ACTTSK|TENFY_SIGSEM, TASK1, SEMID_LARGE },
														1000, 1000 });

/* イベントフラグIDが有効範囲外［NGKI3710］*/
CRE_CYC(CYC17, { TA_NULL, { TNFY_SETFLG, FLGID_LARGE, 0x01U }, 1000, 1000 });
CRE_CYC(CYC18, { TA_NULL, { TNFY_ACTTSK|TENFY_SETFLG, TASK1, FLGID_LARGE,
													0x01U }, 1000, 1000 });

/* データキューIDが有効範囲外［NGKI3713］*/
CRE_CYC(CYC19, { TA_NULL, { TNFY_SNDDTQ, DTQID_LARGE, 0x00 }, 1000, 1000 });
/* データキューIDが有効範囲外［NGKI3715］*/
CRE_CYC(CYC20, { TA_NULL, { TNFY_ACTTSK|TENFY_SNDDTQ, TASK1, DTQID_LARGE },
														1000, 1000 });

/* タイムイベントハンドラの先頭番地が正しくない［NGKI3693］*/
CRE_ALM(ALM1, { TA_NULL, { TNFY_HANDLER, 1, ADD1(alarm1_handler) }});
CRE_ALM(ALM2, { TA_NULL, { TNFY_HANDLER, 1, 0 }});

/* 変数の番地が正しくない［NGKI3699］*/
CRE_ALM(ALM3, { TA_NULL, { TNFY_SETVAR, ADD1(&nvar1), 1 }});
CRE_ALM(ALM4, { TA_NULL, { TNFY_SETVAR, 0, 1 }});

/* 変数の番地が正しくない［NGKI3701］*/
CRE_ALM(ALM5, { TA_NULL, { TNFY_ACTTSK|TENFY_SETVAR, TASK1, ADD1(&nvar1) }});
CRE_ALM(ALM6, { TA_NULL, { TNFY_ACTTSK|TENFY_SETVAR, TASK1, 0 }});

/* 変数の番地が正しくない［NGKI3897］*/
CRE_ALM(ALM7, { TA_NULL, { TNFY_INCVAR, ADD1(&nvar2) }});
CRE_ALM(ALM8, { TA_NULL, { TNFY_INCVAR, 0 }});

/* 変数の番地が正しくない［NGKI3897］*/
CRE_ALM(ALM9, { TA_NULL, { TNFY_ACTTSK|TENFY_INCVAR, TASK1, ADD1(&nvar2) }});
CRE_ALM(ALM10, { TA_NULL, { TNFY_ACTTSK|TENFY_INCVAR, TASK1, 0 }});

/* タスクIDが有効範囲外［NGKI3704］*/
CRE_ALM(ALM11, { TA_NULL, { TNFY_ACTTSK, TSKID_LARGE }});
CRE_ALM(ALM12, { TA_NULL, { TNFY_WUPTSK, TSKID_LARGE }});
CRE_ALM(ALM13, { TA_NULL, { TNFY_ACTTSK|TENFY_ACTTSK, TASK1, TSKID_LARGE }});
CRE_ALM(ALM14, { TA_NULL, { TNFY_ACTTSK|TENFY_WUPTSK, TASK1, TSKID_LARGE }});

/* セマフォIDが有効範囲外［NGKI3707］*/
CRE_ALM(ALM15, { TA_NULL, { TNFY_SIGSEM, SEMID_LARGE }});
CRE_ALM(ALM16, { TA_NULL, { TNFY_ACTTSK|TENFY_SIGSEM, TASK1, SEMID_LARGE }});

/* イベントフラグIDが有効範囲外［NGKI3710］*/
CRE_ALM(ALM17, { TA_NULL, { TNFY_SETFLG, FLGID_LARGE, 0x01U }});
CRE_ALM(ALM18, { TA_NULL, { TNFY_ACTTSK|TENFY_SETFLG, TASK1, FLGID_LARGE,
																	0x01U }});

/* データキューIDが有効範囲外［NGKI3713］*/
CRE_ALM(ALM19, { TA_NULL, { TNFY_SNDDTQ, DTQID_LARGE, 0x00 }});
/* データキューIDが有効範囲外［NGKI3715］*/
CRE_ALM(ALM20, { TA_NULL, { TNFY_ACTTSK|TENFY_SNDDTQ, TASK1, DTQID_LARGE }});

/* エラーにならない静的API（DEF_INHの準備）*/
CFG_INT(INTNO1, { TA_NULL, TMAX_INTPRI });
CFG_INT(INTNO2, { TA_NULL, TMIN_INTPRI });

/* inthdrがプログラムの先頭番地として正しくない［NGKI3056］*/
DEF_INH(INHNO1, { TA_NULL, ADD1(int1_handler) });
DEF_INH(INHNO2, { TA_NULL, 0 });

/* exchdrがプログラムの先頭番地として正しくない［NGKI3135］*/
DEF_EXC(CPUEXC1, { TA_NULL, ADD1(cpuexc1_handler) });
DEF_EXC(CPUEXC2, { TA_NULL, 0 });

/* istkがターゲット定義の制約に合致しない［NGKI3222］*/
DEF_ICS({ 10 * STACK_SIZE, ADD1(istack) });

/* inirtnがプログラムの先頭番地として正しくない［NGKI3243］*/
ATT_INI({ TA_NULL, 1, ADD1(initialize1_routine) });
ATT_INI({ TA_NULL, 2, 0 });

/* terrtnがプログラムの先頭番地として正しくない［NGKI3250］*/
ATT_TER({ TA_NULL, 1, ADD1(terminate1_routine) });
ATT_TER({ TA_NULL, 2, 0 });
